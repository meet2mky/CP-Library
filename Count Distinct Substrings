#include<iostream>
#include<vector>
#include<string>
#include<algorithm>
#include<set>
using namespace std;

long long count_diff_subs(string const& s) {
	long long cnt = 0;
	int n = (int)s.size();
	long long mod = 1e9 + 9;
	long long p = 31;
	vector<long long> hash(n + 1);
	vector<long long> pow(n + 1);
	hash[0] = 0;
	pow[0] = 1;
	for (int i = 1; i <= n; i++) {
		pow[i] = (pow[i - 1] * p) % mod;
	}
	for (int i = 1; i <= n; i++) {
		hash[i] = (hash[i - 1] + (s[i - 1] - 'a' + 1) * pow[i - 1]) % mod;
	}

	for (int len = 1; len <= n; len++) {
		set<long long> hs;
		for (int i = 1; i + len -1 <= n; i++) {
			long long h_value  = ((hash[i + len - 1] - hash[i - 1] + mod) * pow[n - i]) % mod;
			hs.insert(h_value);
		}
		cnt += hs.size();
	}
	return cnt;
}
int main() {
	int t;
	cin >> t;
	while (t--) {
		string inp;
		cin >> inp;
		cout << "Number of different substrings are: " << count_diff_subs(inp) << endl;
		cout << endl;
	}
	return 0;
}
