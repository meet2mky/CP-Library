#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
using namespace std;
long long compute_hash(string const& s) {
	const int mod = 1e9 + 9;
	const int p = 31;
	long long pow = 1;
	long long hash_value = 0;

	for (char ch : s) {
		hash_value = (hash_value + (ch - 'a' + 1) * pow) % mod;
		pow = (pow * p) % mod;
	}
	return hash_value;
}
void group_by_identical(vector<string> const& arr) {
	int n = arr.size();
	vector<pair<int, int> > hash_id(n);
	for (int i = 0; i < n; i++) {
		hash_id[i] = { compute_hash(arr[i]),i };
	}
	sort(hash_id.begin(), hash_id.end());
	for (int i = 0; i < n; i++) {
		if (i == 0 || hash_id[i].first != hash_id[i - 1].first) {
			cout << "New Group Started" << endl;
		}
		cout << arr[hash_id[i].second] << endl;
	}
}
int main() {
	int n;
	cin >> n;
	vector<string> arr(n);
	for (int i = 0; i <n; i++) {
		cin >> arr[i];
	}
	group_by_identical(arr);
	return 0;
}
