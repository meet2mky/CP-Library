#include<bits/stdc++.h>
using namespace std;
#define int long long // to use int as long long
int K = 4; // to repeat prime checking test
int powmod(int x,int e, int m){
    int res =1;
    while(e>0){
        if(e&1){
            res*=x;
            res%=m;
        }
        x*=x;
        x%=m;
        e>>=1;
    }
    return res;
}
signed main(){
    srand(time(NULL));
    int n;
    cin >> n; // number to be tested ( n is odd & greater than 2)
    int b = 0;
    for(int i=0;i<K;i++){
        int a = 2 + rand()%(n-3); // random integer in [2,n-2]
        int r=0;
        int d = n-1;
        while(!(d&1)) r++, d>>=1;
        int x = powmod(a,d,n);
        b = (x==1||x==(n-1)); // if b == 1 keep checking
        for(int j=0; j < (r-1) && b==1; j++){
            x = powmod(x,2,n);
            if(x==(n-1)){
                b = 1; // keep checking
            }
        }
        if(b==0){ // n is composite asserted
            cout << "Composite\n";
            return 0;
        }

    }
    cout << "Probable prime\n";
    return 0;
}
